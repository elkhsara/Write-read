import pandas as pd

def read_combined_dfs_from_excel(input_file):
    # Initialize the dictionary structure
    combined_rates = {
        "": [None, None, None],
        "_SS": [None, None, None],
        "D2D": [None, None, None]
    }

    combined_curves = {
        "": [None, None],
        "_SS": [None, None],
        "D2D": [None, None]
    }

    # Read the Excel file
    xls = pd.ExcelFile(input_file)

    def read_section(df, row, col_start, col_step, suffix, is_rate=True):
        if is_rate:
            df_list = [None, None, None]  # Placeholder for 3e, 6e, estr
        else:
            df_list = [None, None]  # Placeholder for common, specific

        for idx in range(len(df_list)):
            start_col = col_start + idx * col_step
            if not pd.isna(df.iat[row, start_col]):
                if is_rate:
                    columns = [start_col, start_col + 1, start_col + 2]
                    df_list[idx] = pd.read_excel(input_file, sheet_name='Rates', header=row + 1, usecols=columns)
                else:
                    columns = [start_col, start_col + 1]
                    df_list[idx] = pd.read_excel(input_file, sheet_name='Curves', header=row + 1, usecols=columns)
        return df_list

    # Read Rates
    if 'Rates' in xls.sheet_names:
        df_rates = pd.read_excel(input_file, sheet_name='Rates', header=None)

        # Process Rates for "" and "_SS"
        start_row = 1
        col_start = 1
        col_step = 4

        if df_rates.iat[start_row-1, col_start-1] == "D2C":
            start_row += 1

            # Read rates for "" suffix
            combined_rates[""] = read_section(df_rates, start_row, col_start, col_step, "", is_rate=True)

            # Read rates for "_SS" suffix
            combined_rates["_SS"] = read_section(df_rates, start_row, col_start + col_step * 3, col_step, "_SS", is_rate=True)

            # Find the starting row for "D2D"
            max_len = max(len(df) for df in combined_rates[""] if df is not None)
            start_row += max_len + 5

            if df_rates.iat[start_row-1, col_start-1] == "D2D":
                start_row += 1

                # Read rates for "D2D" suffix
                combined_rates["D2D"] = read_section(df_rates, start_row, col_start, col_step, "D2D", is_rate=True)

    # Read Curves
    if 'Curves' in xls.sheet_names:
        df_curves = pd.read_excel(input_file, sheet_name='Curves', header=None)

        # Process Curves for "" and "_SS"
        start_row = 1
        col_start = 1
        col_step = 3

        if df_curves.iat[start_row-1, col_start-1] == "D2C":
            start_row += 1

            # Read curves for "" suffix
            combined_curves[""] = read_section(df_curves, start_row, col_start, col_step, "", is_rate=False)

            # Read curves for "_SS" suffix
            combined_curves["_SS"] = read_section(df_curves, start_row, col_start + col_step * 2, col_step, "_SS", is_rate=False)

            # Find the starting row for "D2D"
            max_len = max(len(df) for df in combined_curves[""] if df is not None)
            start_row += max_len + 5

            if df_curves.iat[start_row-1, col_start-1] == "D2D":
                start_row += 1

                # Read curves for "D2D" suffix
                combined_curves["D2D"] = read_section(df_curves, start_row, col_start, col_step, "D2D", is_rate=False)

    return combined_rates, combined_curves

# Example usage
combined_rates, combined_curves = read_combined_dfs_from_excel("output.xlsx")
